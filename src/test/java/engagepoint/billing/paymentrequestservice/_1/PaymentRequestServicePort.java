
package engagepoint.billing.paymentrequestservice._1;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "PaymentRequestServicePort", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PaymentRequestServicePort {


    /**
     * 
     * @param parameters
     * @return
     *     returns engagepoint.billing.paymentrequestservice._1.PaymentRequestDTO
     * @throws PaymentRequestNoFoundException
     */
    @WebMethod(action = "getPaymentRequestByInternalId")
    @WebResult(name = "paymentRequestByInternalIdResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", partName = "parameters")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public PaymentRequestDTO getPaymentRequestByInternalId(
            @WebParam(name = "paymentRequestByInternalIdRequest", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", partName = "parameters")
            long parameters)
        throws PaymentRequestNoFoundException
    ;

    /**
     *
     * @param status
     * @param externalPaymentId
     */
    @WebMethod(action = "setPaymentRequestStatus")
    @RequestWrapper(localName = "setPaymentRequestStatus", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.SetPaymentRequestStatus")
    @ResponseWrapper(localName = "setPaymentRequestStatusResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.SetPaymentRequestStatusResponse")
    public void setPaymentRequestStatus(
            @WebParam(name = "externalPaymentId", targetNamespace = "")
            String externalPaymentId,
            @WebParam(name = "status", targetNamespace = "")
            PaymentRequestStatus status);

    /**
     *
     * @param externalPaymentId
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod(action = "setApplyStatusPaymentRequest")
    @WebResult(name = "paymentsAffected", targetNamespace = "")
    @RequestWrapper(localName = "setApplyStatusPaymentRequest", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.SetApplyStatusPaymentRequest")
    @ResponseWrapper(localName = "setApplyStatusPaymentRequestResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.SetApplyStatusPaymentRequestResponse")
    public Integer setApplyStatusPaymentRequest(
            @WebParam(name = "externalPaymentId", targetNamespace = "")
            String externalPaymentId);

    /**
     *
     * @param externalPaymentId
     */
    @WebMethod(action = "setVoidStatusPaymentRequest")
    @RequestWrapper(localName = "setVoidStatusPaymentRequest", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.SetVoidStatusPaymentRequest")
    @ResponseWrapper(localName = "setVoidStatusPaymentRequestResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.SetVoidStatusPaymentRequestResponse")
    public void setVoidStatusPaymentRequest(
            @WebParam(name = "externalPaymentId", targetNamespace = "")
            String externalPaymentId);

    /**
     *
     * @param status
     * @param subscriberExternalId
     * @return
     *     returns java.util.List<engagepoint.billing.paymentrequestservice._1.PaymentRequestDTO>
     * @throws EntityNotFoundException
     */
    @WebMethod(action = "searchPaymentRequests")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchPaymentRequests", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.SearchPaymentRequests")
    @ResponseWrapper(localName = "searchPaymentRequestsResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.SearchPaymentRequestsResponse")
    public List<PaymentRequestDTO> searchPaymentRequests(
            @WebParam(name = "subscriberExternalId", targetNamespace = "")
            String subscriberExternalId,
            @WebParam(name = "status", targetNamespace = "")
            PaymentRequestStatus status)
        throws EntityNotFoundException
    ;

    /**
     *
     * @param paymentRequest
     * @return
     *     returns long
     * @throws ConstraintViolationException
     */
    @WebMethod(action = "createInitialPaymentRequest")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createInitialPaymentRequest", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.CreateInitialPaymentRequest")
    @ResponseWrapper(localName = "createInitialPaymentRequestResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.CreateInitialPaymentRequestResponse")
    public long createInitialPaymentRequest(
            @WebParam(name = "paymentRequest", targetNamespace = "")
            PaymentRequestDTO paymentRequest)
        throws ConstraintViolationException
    ;

    /**
     *
     * @param paymentRequests
     * @return
     *     returns java.lang.Long
     * @throws ConstraintViolationException
     */
    @WebMethod(action = "createInitialPaymentRequests")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createInitialPaymentRequests", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.CreateInitialPaymentRequests")
    @ResponseWrapper(localName = "createInitialPaymentRequestsResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.CreateInitialPaymentRequestsResponse")
    public Long createInitialPaymentRequests(
            @WebParam(name = "paymentRequests", targetNamespace = "")
            List<PaymentRequestDTO> paymentRequests)
        throws ConstraintViolationException
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<engagepoint.billing.paymentrequestservice._1.PaymentRequestDTO>
     */
    @WebMethod(action = "searchPaymentRequestsByPayment")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchPaymentRequestsByPayment", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.SearchPaymentRequestsByPayment")
    @ResponseWrapper(localName = "searchPaymentRequestsByPaymentResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.SearchPaymentRequestsByPaymentResponse")
    public List<PaymentRequestDTO> searchPaymentRequestsByPayment(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0);

    /**
     * 
     * @param paymentRequestId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "getInsertUserId")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getInsertUserId", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.GetInsertUserId")
    @ResponseWrapper(localName = "getInsertUserIdResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.GetInsertUserIdResponse")
    public String getInsertUserId(
            @WebParam(name = "paymentRequestId", targetNamespace = "")
            String paymentRequestId);

    /**
     * 
     * @param currentDate
     * @return
     *     returns java.util.List<engagepoint.billing.paymentrequestservice._1.PaymentRequestDTO>
     */
    @WebMethod(action = "getPendingPaymentsToVoid")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPendingPaymentsToVoid", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.GetPendingPaymentsToVoid")
    @ResponseWrapper(localName = "getPendingPaymentsToVoidResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.GetPendingPaymentsToVoidResponse")
    public List<PaymentRequestDTO> getPendingPaymentsToVoid(
            @WebParam(name = "currentDate", targetNamespace = "")
            Object currentDate);

    /**
     * 
     * @param parameters
     * @return
     *     returns engagepoint.billing.paymentrequestservice._1.GetPaymentRequestByExternalIdAndSubscriberResponse
     */
    @WebMethod(action = "getPaymentRequestByExternalIdAndSubscriber")
    @WebResult(name = "getPaymentRequestByExternalIdAndSubscriberResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", partName = "parameters")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public GetPaymentRequestByExternalIdAndSubscriberResponse getPaymentRequestByExternalIdAndSubscriber(
            @WebParam(name = "getPaymentRequestByExternalIdAndSubscriberRequest", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", partName = "parameters")
            GetPaymentRequestByExternalIdAndSubscriberRequest parameters);

    /**
     * 
     * @param updateUserId
     * @param description
     * @param reasonCode
     * @param externalPaymentId
     * @return
     *     returns boolean
     */
    @WebMethod(action = "voidPaymentRequestByExternalId")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "voidPaymentRequestByExternalId", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.VoidPaymentRequestByExternalId")
    @ResponseWrapper(localName = "voidPaymentRequestByExternalIdResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.VoidPaymentRequestByExternalIdResponse")
    public boolean voidPaymentRequestByExternalId(
            @WebParam(name = "externalPaymentId", targetNamespace = "")
            String externalPaymentId,
            @WebParam(name = "description", targetNamespace = "")
            String description,
            @WebParam(name = "updateUserId", targetNamespace = "")
            String updateUserId,
            @WebParam(name = "reasonCode", targetNamespace = "")
            String reasonCode);

    /**
     * 
     * @param updateUserId
     * @param description
     * @param internalPaymentId
     * @param reasonCode
     * @return
     *     returns boolean
     */
    @WebMethod(action = "voidPaymentRequestByInternalId")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "voidPaymentRequestByInternalId", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.VoidPaymentRequestByInternalId")
    @ResponseWrapper(localName = "voidPaymentRequestByInternalIdResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.VoidPaymentRequestByInternalIdResponse")
    public boolean voidPaymentRequestByInternalId(
            @WebParam(name = "internalPaymentId", targetNamespace = "")
            Long internalPaymentId,
            @WebParam(name = "description", targetNamespace = "")
            String description,
            @WebParam(name = "updateUserId", targetNamespace = "")
            String updateUserId,
            @WebParam(name = "reasonCode", targetNamespace = "")
            String reasonCode);

    /**
     * 
     * @param currentDate
     * @param externalPaymentId
     * @return
     *     returns boolean
     */
    @WebMethod(action = "canBeVoidedRequest")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "canBeVoidedRequest", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.CanBeVoidedRequest")
    @ResponseWrapper(localName = "canBeVoidedRequestResponse", targetNamespace = "urn:engagepoint:billing:PaymentRequestService:1.0", className = "engagepoint.billing.paymentrequestservice._1.CanBeVoidedRequestResponse")
    public boolean canBeVoidedRequest(
            @WebParam(name = "externalPaymentId", targetNamespace = "")
            String externalPaymentId,
            @WebParam(name = "currentDate", targetNamespace = "")
            Object currentDate);

}
